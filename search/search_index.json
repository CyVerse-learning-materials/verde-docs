{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome!","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Welcome to the AI-VERDE, an open source platform that facilitates access to commercial and on-premise LLMs with budget and access controls. AI-VERDE stands for \"AI Virtual Explorer for Research, Discovery, and Education\". There are two pieces to AI-VERDE, the AI-VERDE chat interface and the AI-VERDE API (application programming interface)</p> <p>Our chat interface provides you with an interactive, AI-powered assistant designed to enhance your learning, research, and teaching experiences. Using cutting-edge language model technology from OpenAI, this interface allows you to engage with an advanced AI assistant capable of answering questions, offering explanations, and assisting with various tasks in real time.</p>"},{"location":"#key-features","title":"Key Features:","text":"<ul> <li>Interactive Q&amp;A: Simply type your question, and the assistant will provide clear, concise answers on a wide range of topics.</li> <li>Designed for small teams and courses: Use AI-VERDE for small teams, labs, and courses</li> <li>Bring Your Own (BYO) LLM: Instructors and team leads can optionally bring their own commercial or third-party LLM to AI-VERDE or use CyVerse's on-premise LLMs </li> <li>Built for Retrieval-Augmented Generation (RAG): Instructors and team leads can optionally configure AI-VERDE to provide answers strictly from source documents</li> <li>Budgets management and cost savings: If you're using commercial services, tokens cost money. Use AI-VERDE to control model access, set budgets at the course or team, and to set budgets per individual.</li> <li>Built-in Guardrails: Ensure the responsible, safe, and effective use of AI-VERDE within your team and course</li> </ul>"},{"location":"chat-history/","title":"Using AI-VERDE Chat History","text":""},{"location":"getting-started/","title":"Getting Started with AI-VERDE Chat","text":"<p>This guide will help you get up and running quickly, so you can start making the most out of your experience with our AI-VERDE Chat.</p>"},{"location":"getting-started/#1-sign-in","title":"1. Sign In","text":"<p>Before using the AI-VERDE chat interface, ensure you are signed in with your institution's credentials.</p> <p>Note</p> <p>AI-VERDE is currently only available to the University of Arizona community</p> <ol> <li>Go to https://chat.cyverse.ai/.</li> <li>Click Sign In button.</li> <li>Select your institutional provider</li> <li>Click on the Log On button.</li> <li>Login using your institutional login process</li> <li>Click Sign In.</li> </ol>"},{"location":"getting-started/#2-select-your-team-or-course","title":"2. Select Your Team or Course","text":"<p>Once signed in, find your course or team card and click on the chat button.</p> <p></p>"},{"location":"getting-started/#2-ask-your-first-question","title":"2. Ask Your First Question","text":"<p>After clicking on the course or team card, the page will show a text box where you can interact with AI-VERDE. You can then:</p> <ul> <li>Type a question directly in the chat box (e.g., \"Why is the sky blue?\").</li> <li>Press Send to submit.</li> <li>Receive a Response within seconds, tailored to your query.</li> </ul> <p></p>"},{"location":"getting-started/#3-continue-the-conversation","title":"3. Continue the Conversation","text":"<p>You can ask follow-up questions for further clarification, request examples, or explore related topics.</p>"},{"location":"getting-started/#example","title":"Example:","text":"<ol> <li>Initial Question: \"Explain the concept of ecosystems in biology.\"</li> <li>Follow-Up: \"Can you provide examples of different types of ecosystems?\"</li> <li>Further Detail: \"How does biodiversity impact ecosystem stability?\"</li> </ol>"},{"location":"getting-started/#tips-for-using-the-chat-interface","title":"Tips for Using the Chat Interface","text":"<ul> <li>Be Specific: Detailed questions yield the best responses.</li> <li>Explore Broadly: If your team or course is not targeting specific documents, you can ask about a wide range of topics or request explanations for academic concepts.</li> <li>Engage in Multi-Step Conversations: If you need deeper insights, use follow-up questions to refine the responses.</li> </ul>"},{"location":"getting-started/#support-and-feedback","title":"Support and Feedback","text":"<p>If you encounter issues or have suggestions, reach out to our support team using the built-in support chat:</p> <p></p>"},{"location":"models-current/","title":"Current CyVerse Models","text":"<p>Important</p> <p>Last Updated: July 24, 2025</p> <p>This page is provides details about models provided directly through CyVerse. Information about  models from other national inference infrastructure can be referenced through the respective documentation or informational web sites.</p> Model Name Aliases Token Context Length Supports Vision Supports Reasoning Supports Tools gemma-3-12b-it 32,768 Llama-3.3-70B-Instruct-quantized 128,000 Llama-3.2-11B-Vision-Instruct 32,768 phi-4-multimodal-instruct phi-4 128,000 qwen3-coder-32b 131,072 <p>Note</p> <p>To use a model, you can use the model name or alias (if provided.)</p>"},{"location":"models-current/#deprecated-models","title":"Deprecated Models","text":"<p>This section lists models that have been deprecated through \"cyverse\".</p> <ul> <li>Qwen2.5-Coder-32B-Instruct, removed on July 20, 2025</li> </ul>"},{"location":"api/","title":"Introduction to AI-VERDE API","text":"<p>This section contains documentation on how to use AI-VERDE API and API keys in code and with clients.</p>"},{"location":"api/aider/","title":"Aider","text":"<p>You can follow these instructions to use your AI-VERDE API Key after Aider, self-described \"AI pair programming in your terminal\". More information on installing and using Aider can be found here, https://aider.chat.</p>"},{"location":"api/aider/#prerequisites","title":"Prerequisites","text":"<ol> <li>Obtain your AI-VERDE API Key. Instructions can be found here, https://aiverde-docs.cyverse.ai/api/api-token/.</li> <li>Note the model(s) you want to configure for Claude Code. Instructions can be found here, https://aiverde-docs.cyverse.ai/api/api-key-models/.</li> <li>Install Aider. Instructions can be found here, https://aider.chat/#getting-started.</li> <li>The remaining instructions assume you have an open terminal on a Linux system with Aider.</li> </ol>"},{"location":"api/aider/#1-configuring-aider","title":"1. Configuring Aider","text":"<ol> <li>Create a <code>$HOME/.aider.conf.yml</code> file with the following contents <pre><code>openai-api-key: insert-your-aiverde-api-key\nopenai-api-base: https://llm-api.cyverse.ai/v1\nmodel: openai/insert-default-model\n</code></pre></li> <li>Replace <code>insert-your-aiverde-api-key</code> with AI-VERDE API Key. </li> <li>Replace the text <code>insert-default-model</code> with the AI-VERDE model. For example, to use <code>phi4</code>, the model field would be set to <code>openai/phi4</code> or if you were using <code>nrp/phi4</code> model, the model field would be set to <code>openai/nrp/phi4</code>.</li> </ol> <p>Note</p> <p>This is the minimal configuration needed to use Aider. If you want to set other configuration for any models, you add a <code>$HOME/.aider.model.metadata.json</code> file. Instructions on the configuration values that can be set in this file can be found here, https://aider.chat/docs/config/adv-model-settings.html. </p>"},{"location":"api/aider/#2-running-aider","title":"2. Running Aider","text":"<p>Run Aider with the following command:</p> <pre><code>aider\n</code></pre> <p>Note</p> <p>You may get additional prompts if you're not in a git repo and if you have not configured your model further (see note above). You can also run aider with <code>aider --no-show-model-warnings</code> if you prefer to ignore model warnings</p> <p>If you are successful entering Aider, congratulations! </p>"},{"location":"api/api-key-claude/","title":"Claude Code (using Anthropic Models)","text":"<p>You can follow these instructions to use your VERDE API Key after installing Claude Code. More information on using Claude Code can be found here, https://docs.anthropic.com/en/docs/intro.</p> <p>Note</p> <p>These instructions assume you are using a space that is connected to Anthropic models. If you need access to Claude Code using a non-Anthropic model, then use the instructions for Claude Code Router.</p>"},{"location":"api/api-key-claude/#prerequisites","title":"Prerequisites","text":"<ol> <li>Your VERDE course or team must be configured to use Anthropic models (see instructor or team lead)</li> <li>Obtain your VERDE API Key. Instructions can be found here</li> <li>Install Claude Code. Instructions can be found here, https://www.anthropic.com/claude-code/</li> <li>The remaining instructions assume you have an open terminal on system with Claude Code and bash installed.</li> </ol>"},{"location":"api/api-key-claude/#1-setting-up-the-necessary-environment-variables","title":"1. Setting up the necessary environment variables","text":"<p>This step should only be needed the first time you use Claude Code.</p> <p>In a terminal, set the following environment variables and replace <code>ANTHROPIC_API_KEY</code> to your VERDE API Key. <pre><code>export ANTHROPIC_BASE_URL=\"https://llm-api.cyverse.ai\"\nexport ANTHROPIC_API_KEY=\"insert-VERDE-API-Key-here\"\nexport ANTHROPIC_MODEL=\"anthropic/claude-sonnet-4\"\n</code></pre> Note, the <code>ANTHROPIC_MODEL</code> can be set to any available Anthropic model. Information about available models can be found here, https://docs.anthropic.com/en/docs/about-claude/models/overview</p>"},{"location":"api/api-key-claude/#2-start-claude-code","title":"2. Start Claude Code","text":"<p>You can then run Claude Code. <pre><code>claude\n</code></pre> After initially launching Claude Code, claude will write the variables into a <code>~/.claude/settings.json</code> file. You do not need to repeat step #1 again for future sessions.</p>"},{"location":"api/api-key-claude/#if-you-need-to-change-your-anthropic_api_key","title":"If you need to change your <code>ANTHROPIC_API_KEY</code>","text":"<p>If for some reason you need to change your VERDE API Key, you can use the slash command <code>/logout</code> in claude or delete your <code>~/.claude/settings.json</code>; then, repeat steps 1-2.</p>"},{"location":"api/api-key-models/","title":"Getting a List of Models","text":"<p>There are three ways to obtain a list models:</p> <ol> <li>Go to this page to view the list of CyVerse models. This list does not include models from external inference services e.g., Jetstream2.</li> <li>Viewing your models in the Course Details</li> <li>Using your API Key to view your models</li> </ol>"},{"location":"api/api-key-models/#viewing-your-models-in-the-course-details","title":"Viewing your models in the Course Details","text":"<p>Your available models will be visible in the AI-VERDE application. These are the steps:</p> <ol> <li>Go to https://chat.cyverse.ai</li> <li>After successfully logging in, click on the Details button of your course</li> <li>Click on the \"API Key\" tab</li> <li>The \"Available Models\" section will list all the models your course has access to</li> </ol>"},{"location":"api/api-key-models/#using-your-api-key-to-view-your-models","title":"Using your API Key to view your models","text":"<p>After obtaining your API Key from your course/team, you can obtain a detailed list of available models using curl:</p> <pre><code>curl -s -L \"https://llm-api.cyverse.ai/v1/models\" -H \"Authorization: Bearer $OPENAI_API_KEY\" -H 'Content-Type: application/json'\n</code></pre> <p>Alternatively, you can use <code>jq</code> or python's json module to view the output in a more human readable format.</p> <p>Option 1: If you have <code>jq</code> installed: <pre><code>curl -s -L \"https://llm-api.cyverse.ai/v1/models\" -H \"Authorization: Bearer $OPENAI_API_KEY\" -H 'Content-Type: application/json'|jq\n</code></pre></p> <p>Option 2: If you have python's json module installed: <pre><code>curl -s -L \"https://llm-api.cyverse.ai/v1/models\" -H \"Authorization: Bearer $OPENAI_API_KEY\" |python -m json.tool\n</code></pre></p>"},{"location":"api/api-token-android/","title":"Examples of using your AI-VERDE API Token in Android","text":""},{"location":"api/api-token-jupyter/","title":"Examples of using your AI-VERDE API Token in Jupyter","text":""},{"location":"api/api-token-langchain/","title":"Using your AI-VERDE API key to integrate with LangChain","text":""},{"location":"api/api-token-langchain/#1-install-langchain-python-libraries","title":"1. Install LangChain python libraries","text":"<pre><code>pip install langchain_community \n</code></pre>"},{"location":"api/api-token-langchain/#2-obtain-variables-to-integrate-ai-verde-with-langchain","title":"2. Obtain variables to integrate AI-VERDE with LangChain","text":"<p>Obtaining your AI-VERDE API key is outlined here.</p> <p>You can obtain a list of the models you have access to with the following command; denoted by \"id\": <pre><code>curl -s -L \"https://llm-api.cyverse.ai/v1/models\" -H \"Authorization: Bearer [AI-VERDE API KEY]\" -H 'Content-Type: application/json'|jq \n</code></pre></p>"},{"location":"api/api-token-langchain/#3-create-python-scripts","title":"3. Create python scripts","text":"<pre><code>from langchain_community.chat_models import ChatLiteLLM\n\nllm = ChatLiteLLM(\n    model=\"litellm_proxy/[MODEL NAME]\",\n    api_key=\"[AI-VERDE API KEY]\",\n    api_base=\"https://llm-api.cyverse.ai\")\n\nprint (llm.invoke(\"Hello, world!\"))\n</code></pre> <p>Alternatively, you can include the API key as an environment variable or secret to avoid storing it in plain text:</p> <pre><code>import getpass\nimport os\n\nif not os.environ.get(\"AIVERDE_API_KEY\"):\n  os.environ[\"AIVERDE_API_KEY\"] = getpass.getpass(\"Enter AI-VERDE API key: \")\napi_key = os.environ[\"AIVERDE_API_KEY\"]\n\nfrom langchain_community.chat_models import ChatLiteLLM\n\nllm = ChatLiteLLM(\n    model=\"litellm_proxy/[MODEL NAME]\",\n    api_key=api_key,\n    api_base=\"https://llm-api.cyverse.ai\")\n\nprint (llm.invoke(\"Hello, world!\"))\n</code></pre>"},{"location":"api/api-token-llamaindex/","title":"Using your AI-VERDE API key to integrate with LlamaIndex","text":""},{"location":"api/api-token-llamaindex/#1-install-llamaindex-libraries","title":"1. Install LlamaIndex libraries","text":"<pre><code>pip install llama-index-core llama-index-llms-litellm\n</code></pre>"},{"location":"api/api-token-llamaindex/#2-obtain-variables-to-integrate-ai-verde-with-langchain","title":"2. Obtain variables to integrate AI-VERDE with LangChain","text":"<p>Obtaining your AI-VERDE API key is outlined here.</p> <p>You can obtain a list of the models you have access to with the following command; denoted by \"id\": <pre><code>curl -s -L \"https://llm-api.cyverse.ai/v1/models\" -H \"Authorization: Bearer [AI-VERDE API KEY]\" -H 'Content-Type: application/json'|jq \n</code></pre></p>"},{"location":"api/api-token-llamaindex/#3-write-python-scripts","title":"3. Write python scripts","text":"<pre><code>from llama_index.llms.litellm import LiteLLM\nfrom llama_index.core.llms import ChatMessage\n\nllm = LiteLLM(\n    model=\"litellm_proxy/[MODEL NAME]\",\n    api_base=\"https://llm-api.cyverse.ai\",\n    api_key=\"[AI-VERDE API KEY]\",)\n\nmessage = ChatMessage(role=\"user\", content=\"Hey! how's it going?\")\nresponse = llm.chat([message])\n\nprint(response)\n</code></pre> <p>Alternatively, you can include the API key as an environment variable or secret to avoid storing it in plain text:</p> <pre><code>import getpass\nimport os\n\nif not os.environ.get(\"AIVERDE_API_KEY\"):\n  os.environ[\"AIVERDE_API_KEY\"] = getpass.getpass(\"Enter AI-VERDE API key: \")\napi_key = os.environ[\"AIVERDE_API_KEY\"]\n\nfrom llama_index.llms.litellm import LiteLLM\nfrom llama_index.core.llms import ChatMessage\n\nllm = LiteLLM(\n    model=\"litellm_proxy/[MODEL NAME]\",\n    api_base=\"https://llm-api.cyverse.ai\",\n    api_key=\"[AI-VERDE API KEY]\",)\n\nmessage = ChatMessage(role=\"user\", content=\"Hey! how's it going?\")\nresponse = llm.chat([message])\n\nprint(response)\n</code></pre> <p>Llama Index embedding support is outlined here, but functionality depends on access to an embedding model through AI-VERDE.</p>"},{"location":"api/api-token-macos/","title":"Examples of using your AI-VERDE API Token in MacOS","text":"<p>Adding AI-Verde to ai platforms takes your chatbot to the next level with smarter, faster AI-powered responses. For everyday tasks like customer support, coding help, or data analysis, making your chatbot more versatile. Best of all, AI-Verde's integration works with most chatbot systems!</p>"},{"location":"api/api-token-macos/#anythingllm","title":"AnythingLLM","text":""},{"location":"api/api-token-macos/#1-download-anythingllm","title":"1. Download AnythingLLM","text":"<p>Download AnythingLLM into your Desktop and select the version best suited for your device.</p> <p> </p> <p>Note:     </p> <ul> <li> <p>Apple Silicon offers faster performance and better energy efficiency compared to Intel processors.    </p> </li> <li> <p>Apple Intel in Macs offer broad compatibility with older software, better support for running Windows, and more hardware upgrade options.</p> </li> </ul>"},{"location":"api/api-token-macos/#2-imput-provider","title":"2. Imput Provider","text":"<p>Go to open settings on the lower right-handside   </p> <p>select AI Provider and LLM  </p> <p>Imput Generic OpenAI as LLM Provider  </p> <p>Add your Base URL, API Key and Chat Model Name</p> <p></p>"},{"location":"api/api-token-macos/#3-start-chatting-with-verde","title":"3. Start Chatting with Verde","text":""},{"location":"api/api-token-macos/#chatbox","title":"Chatbox","text":""},{"location":"api/api-token-macos/#1-log-in-chatbox","title":"1. Log in Chatbox","text":"<p>Log in Chatbox on desktop or lunch in web app.  </p>"},{"location":"api/api-token-macos/#2-go-into-settings","title":"2. Go into Settings","text":"<p>Imput all the elements such as Model Provider, API Key, API Host and Model.</p> <p></p>"},{"location":"api/api-token-macos/#3-start-chatting","title":"3. Start Chatting","text":""},{"location":"api/api-token-macterminal/","title":"Step-by-Step Guide: Using an API Token on macOS","text":"<p>This tutorial explains how to securely use an API token on macOS.</p>"},{"location":"api/api-token-macterminal/#steps-to-use-an-api-token","title":"Steps to Use an API Token","text":""},{"location":"api/api-token-macterminal/#step-1-open-terminal","title":"Step 1: Open Terminal","text":"<ol> <li>Launch the Terminal application on your Mac:</li> <li>Use <code>Command + Space</code> to open Spotlight.</li> <li>Type <code>Terminal</code> and press <code>Enter</code>.  </li> </ol>"},{"location":"api/api-token-macterminal/#step-2-store-the-api-token-in-an-environment-variable","title":"Step 2: Store the API Token in an Environment Variable","text":"<ol> <li>Use a secure method to store the token:   <code>export OPENAI_BASE_URL= \"your_api_token_here\"</code></li> <li>To make it persistent across sessions, add the line to your shell profile file:</li> <li> <p>For zsh (default in macOS):</p> <p><code>echo export OPENAI_BASE_URL=\"your_api_token_here\" &gt;&gt; ~/.zshrc</code> - For bash: <code>echo export OPENAI_BASE_URL=\"your_api_token_here\" &gt;&gt; ~/.bash_profile</code></p> </li> <li> <p>Apply the changes:</p> <ul> <li>For zsh <code>source ~/.zshrc</code> </li> <li>For bash <code>source ~/.bash_profile</code> </li> </ul> </li> </ol>"},{"location":"api/api-token-macterminal/#step-3-verify-the-variable","title":"Step 3: Verify the Variable","text":""},{"location":"api/api-token-macterminal/#step-31-determine-your-shell","title":"Step 3.1: Determine Your Shell","text":"<p>Check which shell you\u2019re using by running:     <code>echo $SHELL</code></p> <ul> <li>If the output is /bin/zsh, your configuration file is <code>~/.zshrc.</code></li> <li>If the output is /bin/bash, your configuration file is<code>~/.bash_profile.</code></li> </ul>"},{"location":"api/api-token-macterminal/#step-32-open-the-configuration-file","title":"Step 3.2: Open the Configuration File","text":"<p>Open the appropriate file in a text editor:</p> <ul> <li> <p>For zsh: <code>nano ~/.zshrc</code></p> </li> <li> <p>For bash: <code>nano ~/.bash_profile</code></p> </li> </ul>"},{"location":"api/api-token-macterminal/#step-33-add-the-token","title":"Step 3.3: Add the Token","text":"<ul> <li>Add the following line to the file:   </li> </ul> <p><code>export OPENAI_BASE_URL=\"your_api_token_here\"</code></p>"},{"location":"api/api-token-macterminal/#step-34-save-and-exit","title":"Step 3.4: Save and Exit","text":"<p>In <code>nano</code>, <code>press Ctrl + O</code> to save the file.     Press <code>Enter</code> to confirm.     Press <code>Ctrl + X</code> to exit.</p> <ul> <li>. Confirm the token is set correctly: </li> </ul> <p><code>echo $OPENAI_BASE_URL</code>  - The terminal should display your token </p>"},{"location":"api/api-token-macterminal/#_1","title":"Step-by-Step Guide: Using an API Token on macOS","text":""},{"location":"api/api-token-macterminal/#step-4-use-the-api-token-in-a-curl-request","title":"Step 4: Use the API Token in a cURL Request","text":"<ul> <li>To test the token, use it in an API call:   <code>curl -H \"Authorization: Bearer $OPENAI_BASE_URL\" https://chat.cyverse.ai/endpoint</code></li> </ul>"},{"location":"api/api-token-macterminal/#step-5-secure-your-token","title":"Step 5: Secure your Token","text":"<ol> <li>Avoid hardcoding tokens in scripts.</li> <li>Use .env files with tools like dotenv for larger projects.</li> <li>Revoke unused or compromised tokens.</li> </ol>"},{"location":"api/api-token-macterminal/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Token not found: Ensure you used source to reload your shell configuration.</li> <li>Permission denied: Check the file permissions of your shell profile.</li> </ul>"},{"location":"api/api-token-macterminal/#youre-all-set-you-can-now-use-your-api-token-securely-on-macos","title":"You're all set! \ud83c\udf89 You can now use your API token securely on macOS.","text":""},{"location":"api/api-token-vscode/","title":"Examples of using your AI-VERDE API Token in VSCode","text":""},{"location":"api/api-token-vscode/#openai","title":"OpenAI","text":"<p>Check if you have access to an OpenAI model by running the following command and looking for OpenAI model ID's (i.e. gpt-4o, gpt-4o-mini). These ID's correspond to the model name</p> <pre><code>curl -s -L \"https://llm-api.cyverse.ai/v1/models\" -H \"Authorization: Bearer [AI-VERDE API KEY]\" -H 'Content-Type: application/json'|jq\n</code></pre>"},{"location":"api/api-token-vscode/#1-install-the-vscode-openai-extension","title":"1. Install the \"vscode-openai\" extension","text":"<p>Within the extension marketplace, a simple search for OpenAI yields the desired extension. </p>"},{"location":"api/api-token-vscode/#2-configure-the-extension","title":"2. Configure the extension","text":"<p>Once installed, a red bar with a \"failed authentication\" error will appear: </p> <p>Selecting this red bar will bring out a new menu. In case you need to access this menu again, pressing the bar again will bring it up.</p> <p>In the new menu, select \"custom\" among the dropdown list</p>"},{"location":"api/api-token-vscode/#_1","title":"VSCode","text":"<p>The menu will then prompt or an API URL, API key, and model name</p> <p></p> <p></p> <p></p> <p>The OpenAI model name must match one of the ID's output by the curl command</p>"},{"location":"api/api-token-vscode/#3-using-the-extension","title":"3. Using the extension","text":"<p>The extension has chat functionality accessed from the leftmost bar in Visual Studio: </p> <p>The extension also provides insights to your code directly via the OpenAI logo</p> <p></p>"},{"location":"api/api-token-windows/","title":"Examples of using your AI-VERDE API Token in Windows Desktop","text":""},{"location":"api/api-token/","title":"Obtaining your AI-VERDE API Kay","text":""},{"location":"api/api-token/#1-sign-in","title":"1. Sign In","text":"<ol> <li>Go to https://chat.cyverse.ai/.</li> <li>Click Sign In.</li> <li>Sign in with your NetID.</li> </ol>"},{"location":"api/api-token/#2-select-your-team-or-course","title":"2. Select Your Team or Course","text":"<p>Click the \"Details\" button:</p> <p></p>"},{"location":"api/api-token/#3-click-the-api-key-tab","title":"3. Click the \"API Key\" tab:","text":""},{"location":"api/api-token/#4-copy-and-save-your-api-key","title":"4. Copy and save your API key","text":"<p>The models available for your course will are listed in the \"Available Models\" section of the API Key page.</p>"},{"location":"api/chatboxai/","title":"Chatbox AI","text":"<p>Chatbox AI is a desktop application that works on Windows, MacOS, Android, iOS, Web, and Linux. These instructions should apply for both Windows and MacOS versions with some variations between the two platforms.</p>"},{"location":"api/chatboxai/#prerequisites","title":"Prerequisites","text":"<ol> <li>Obtain your AI-VERDE API Key and API URL. Instructions can be found here.</li> <li>Note the model(s) you want to configure for Claude Code. Instructions can be found here.</li> <li>Install Chatbox AI by visiting this page: https://chatboxai.app/en#download.</li> <li>The remaining instructions Chatbox AI installed.</li> </ol>"},{"location":"api/chatboxai/#1-configure-ai-verde-in-chatbox-ai","title":"1. Configure AI-VERDE in Chatbox AI","text":"<p>For these steps, you can refer to the screenshot below</p> <ol> <li>Launch Chatbox AI</li> <li>Click on Settings</li> <li>Click on Model Provider</li> <li>Click the \"+ Add\" button </li> <li>Enter \"ai-verde\" in the Name field</li> <li>Leave API Mode to \"OpenAI API Compatible\"</li> <li>Click Add button  You should then be shown the ai-verde configuration panel on the right.</li> <li>Enter (or paste) your AI-VERDE Key in the API Key field</li> <li>Enter (or paste) the AI-VERDE API URL in the API Host field </li> <li>In the model section, click on the \"New\" button, and a new model dialog box will be shown</li> <li>Enter the model in \"Model ID\" field</li> <li>In the capabilities, click on the capabilities if you know the model supports vision, reasoning, or tool use.     !!! Note         Capabilities for a model can be modified at a later time.</li> <li>Click on the \"Save\" button </li> <li>You can repeat steps 10-13 to add additional models</li> <li>Optionally, after adding one or more models, you can click on the \"Check\" button to test the connection to AI-VERDE</li> </ol> <p>Now you're ready to begin chatting!</p>"},{"location":"api/chatboxai/#2-using-chatbox-ai-with-configured-models","title":"2. Using Chatbox AI with configured models","text":"<ol> <li>At any time, you can click on the \"New Chat\" button or click on a previous conversation on the left panel</li> <li>Select the model for this chat session, if necessary </li> <li>Enter your request in the chat textbox to begin chatting with the model</li> </ol> <p>There is a lot of functionality provided by Chatbox AI (as with many other chat interfaces). Feel free to explore!</p>"},{"location":"api/claude-code-router/","title":"Claude Code Router (using non-Anthropic Models)","text":"<p>You can follow these instructions to use your AI-VERDE API Key after installing Claude Code and Claude Code Router. More information on installing and using Claude Code Router can be found here, https://github.com/musistudio/claude-code-router.</p>"},{"location":"api/claude-code-router/#prerequisites","title":"Prerequisites","text":"<ol> <li>Obtain your VERDE API Key. Instructions can be found here, https://aiverde-docs.cyverse.ai/api/api-token/</li> <li>Note the model(s) you want to configure for Claude Code. Instructions can be found here, https://aiverde-docs.cyverse.ai/api/api-key-models/.</li> <li>Install Claude Code. Instructions can be found here, https://www.anthropic.com/claude-code/</li> <li>Install Claude Code Router. Instructions can be found here, https://github.com/musistudio/claude-code-router</li> <li>The remaining instructions assume you have an open terminal on system with Claude Code and bash installed.</li> </ol>"},{"location":"api/claude-code-router/#1-starting-claude-code-router","title":"1. Starting Claude Code Router","text":"<p>This step should only be needed the first time you use Claude Code Router.</p> <p>In a terminal, enter the command <code>ccr start</code> <pre><code>$ ccr start\n</code></pre></p>"},{"location":"api/claude-code-router/#2-configuring-claude-code-router","title":"2. Configuring Claude Code Router","text":"<p>After running <code>ccr code</code>, you will be prompted to enter the minimum configuration to start Claude Code Router. Use the following table for guidance on the values:</p> Field Value or Instructions Notes Provider Name <code>ai-verde</code> any string works Provider API KEY enter your AI-VERDE API key Provider URL <code>https://llm-api.cyverse.ai/v1/chat/completions</code> MODEL Name <code>&lt;verde model name&gt;</code> replace <code>&lt;verde model name&gt;</code> with the model you'd like to use <p>After entering the MODEL name, you should see text similar to the following: <pre><code>Loaded JSON config from: /root/.claude-code-router/config.json\nregister transformer: Anthropic (endpoint: /v1/messages)\nregister transformer: gemini (endpoint: /v1beta/models/:modelAndAction)\nregister transformer: deepseek (no endpoint)\nregister transformer: tooluse (no endpoint)\nregister transformer: openrouter (no endpoint)\nregister transformer: maxtoken (no endpoint)\nproviderConfig:  ai-verde undefined\nai-verde provider registered\n\ud83d\ude80 LLMs API server listening on http://127.0.0.1:3456\n</code></pre> Press <code>ctrl-c</code> so that you can run Claude Code with Claude Code Router.</p>"},{"location":"api/claude-code-router/#3-running-claude-code-router","title":"3. Running Claude Code Router","text":"<p>Running Claude Code with Claude Code Router with the following command:</p> <pre><code>ccr code\n</code></pre> <p>If you are successful entering Claude Code, congratulations! To use Claude Code with the same settings, you will need to run <code>ccr code</code> every time.</p>"},{"location":"api/claude-code-router/#updating-claude-code-router-configuration","title":"Updating Claude Code Router configuration","text":"<p>At some point, you may want to add other models or add or update configuration options. To do so, you can edit the configuration file found in <code>~/.claude-code-router/config.json</code></p>"},{"location":"instructors/getting-started-openai/","title":"Getting Started with OpenAI for Instructors","text":"<p>Welcome! If you are new to AI-VERDE, this guide will walk you through the essential first steps to get up and running.</p> <p>Before you begin: please Schedule Onboarding Session meeting with an AI-VERDE team coordinator.</p>"},{"location":"instructors/getting-started-openai/#1-obtain-an-openai-key","title":"1. Obtain an OpenAI Key","text":"<ol> <li>Log in to your OpenAI account.  </li> <li>Click Create new secret key to generate a new key.  </li> <li>Copy the key and store it in a secure location.  </li> </ol>"},{"location":"instructors/getting-started-openai/#2-create-a-stache-entry-to-share-the-openai-api-key","title":"2. Create a Stache Entry to Share the OpenAI API Key","text":"<ol> <li>Log in to stache.arizona.edu.  </li> <li>Create a new Stache entry with the OpenAI API key.  </li> <li>Share the entry with all of the following individuals:  </li> <li>edwins@arizona.edu </li> <li>iychoi@arizona.edu </li> <li>zhxu73@arizona.edu </li> </ol>"},{"location":"instructors/getting-started-openai/#troubleshooting","title":"Troubleshooting","text":"<p>Having trouble getting started? Here are the most common issues instructors face:</p> <ul> <li> <p>Can\u2019t find the API key after creating it \u2192 OpenAI only shows the key once. If you lost it, go back to the API Keys page and create a new one.  </p> </li> <li> <p>Stache entry not accessible to the AI-VERDE team \u2192 Double-check that you shared the entry with all required addresses.</p> </li> </ul>"},{"location":"instructors/getting-started-openai/#next-step-gather-your-course-details","title":"Next Step: Gather Your Course Details","text":"<p>Great work so far! Once your OpenAI key is shared, you\u2019re ready to move on to the next stage: Creating a course to prepare your roster (students, TAs, and co-instructors) and submit it for course setup.  </p>"},{"location":"instructors/getting-started/","title":"Creating a Course in AI-VERDE","text":""},{"location":"instructors/getting-started/#fill-out-the-courseteam-setup-form","title":"Fill out the Course/Team Setup Form","text":"<p>To start the process to create a course or team in AI-Verde, you can fill out our form here: https://forms.gle/i4RyrTKpG2trRZ1i9</p>"},{"location":"instructors/getting-started/#what-happens-next","title":"What Happens Next","text":"<p>Once you submit the form:</p> <ul> <li>CyVerse staff will create your course/team in AI-VERDE.</li> <li>After your course/team is created, it will appear in the AI-VERDE dashboard.</li> <li>CyVerse staff will contact you and the owner (if different) after the course/team is created.</li> </ul>"},{"location":"instructors/getting-started/#contact-and-feedback","title":"Contact and Feedback","text":"<p>If you are happy with AI-VERDE, we\u2019d love your feedback! Please send comments or critiques to: aiverde@cyverse.org</p>"},{"location":"instructors/managing-a-course/","title":"Managing a Course in AI-VERDE","text":"<p>Once your course has been created, you\u2019ll find it listed in your AI-VERDE dashboard.  From here, instructors can update course details, manage members, monitor usage, and design AI-powered learning activities.</p>"},{"location":"instructors/managing-a-course/#course-overview","title":"Course Overview","text":"<p>The Overview tab is your course\u2019s home base. Here, you can: - Change the course name and description   - Update the title to match your course   - Add a clear description so students know the purpose. - Set start and end dates   - Determines when members can access course activities.   - Example: If you set a start date for Sept 1, students will not be able to log in before that date. - Adjust course activity status   - Switch a course to Active when ready for students.   - Change to Inactive If you want to temporarily pause access without deleting the course.  </p>"},{"location":"instructors/managing-a-course/#managing-members","title":"Managing Members","text":"<p>The Members tab gives you full control over who is enrolled and what they can do.  </p> <p>Features: - Add new members   - Enter the user\u2019s email address.   - Assign them a role at the time of adding. - Remove members   - Select a user and remove them from the course.   - Useful if a student drops the class or a TA changes. - Edit member roles   - Roles determine what access each user has:     - Instructor \u2192 full course management rights.     - TA \u2192 supports course but with limited management tools.     - Student \u2192 participates in activities only.  </p> <p>Tip: If a student says they can\u2019t see the course, check the Members tab first to make sure they are listed. </p>"},{"location":"instructors/managing-a-course/#budget-and-usage","title":"Budget and Usage","text":"<p>AI-VERDE resources are tied to a budget, managed in coordination with the CyVerse team.  </p> <ul> <li>Budgets are set by CyVerse </li> <li>Instructors cannot adjust the total budget, but can request changes via support.  </li> <li>What you can do as an instructor: </li> <li>View individual usage \u2192 see how much each student has consumed.  </li> <li>View total course usage \u2192 monitor whether the class is approaching budget limits.  </li> <li>Why it matters: </li> <li>Helps you plan assignments around available resources.  </li> <li>Identifies students who may need guidance if their usage is unusually high.  </li> </ul>"},{"location":"instructors/managing-a-course/#ai-prompts-and-content","title":"AI Prompts and Content","text":"<p>The Prompts feature lets instructors design and share structured prompts for AI activities.  </p> <p>How to use it: 1. Go to the Prompts tab. 2. Write a prompt (e.g., \u201cSummarize today\u2019s lecture into 5 key points\u201d). 3. Sharing the prompt is automatic, members can generate AI responses inside Verde. 4. Review outputs to ensure alignment with learning goals.  </p> <p>This feature helps standardize assignments and ensures all students are working from the same AI instructions. </p>"},{"location":"instructors/managing-a-course/#api-keys-and-integrations","title":"API Keys and Integrations","text":"<p>Instructors can extend Verde beyond the platform using API keys.  </p> <ul> <li>Generate API keys </li> <li>Useful for advanced workflows, automation, or integrating Verde with other systems.  </li> <li>Export AI-VERDE outputs </li> <li>Save or send results from Verde to external platforms (e.g., LMS, research tools, or data analysis environments).  </li> <li>Why this matters: </li> <li>Keeps Verde flexible, fitting into your department\u2019s existing tools rather than operating as an isolated system.  </li> </ul>"},{"location":"instructors/managing-a-course/#troubleshooting-while-managing","title":"Troubleshooting While Managing","text":"<ul> <li>Course doesn\u2019t show up? \u2192 Confirm with support that your course was created and check start date.  </li> <li>A student can\u2019t log in? \u2192 Verify they are listed under Members. If not, add them.  </li> <li>Budget concerns? \u2192 Contact CyVerse to review or request an adjustment.  </li> <li>Prompt not working as expected? \u2192 Double-check formatting and reshare with the class.  </li> </ul>"},{"location":"instructors/troubleshooting/","title":"Troubleshooting Guide","text":"<p>This guide covers the most common issues instructors face when getting started, creating a course, and managing a course in AI-VERDE.</p>"},{"location":"instructors/troubleshooting/#getting-started-issues","title":"Getting Started Issues","text":"<ul> <li>Can\u2019t find the API key after creating it </li> <li> <p>OpenAI only shows the key once. If you lost it, return to the API Keys page and generate a new one.  </p> </li> <li> <p>Stache entry not accessible to the AI-VERDE team </p> </li> <li>Double-check you shared the entry with all required addresses:  <ul> <li>edwins@arizona.edu </li> <li>iychoi@arizona.edu </li> <li>zhxu73@arizona.edu </li> </ul> </li> </ul>"},{"location":"instructors/troubleshooting/#creating-a-course-issues","title":"Creating a Course Issues","text":"<ul> <li>Form submitted but no confirmation </li> <li>Wait up to 48 hours for processing.  </li> <li> <p>Check your spam/junk folder for CyVerse messages.  </p> </li> <li> <p>CSV upload rejected </p> </li> <li>Ensure file format is <code>.CSV</code> (not <code>.XLSX</code>).  </li> <li> <p>Confirm there are no blank rows or invalid characters.  </p> </li> <li> <p>Some students missing from initial roster </p> </li> <li>Double-check the CSV formatting.  </li> <li> <p>Resubmit the corrected file to the support team.</p> </li> <li> <p>Course details are incorrect (name, description, or term) </p> </li> <li>Contact ai-verde-support@cyverse.org with the corrections.  </li> </ul>"},{"location":"instructors/troubleshooting/#managing-a-course-issues","title":"Managing a Course Issues","text":"<ul> <li>Course doesn\u2019t show up? </li> <li>Confirm with support that your course was created and check start date.  </li> <li>A student can\u2019t log in? </li> <li> <p>Verify they are listed under Members. If not, add them.  </p> </li> <li> <p>Budget seems off or not updating </p> </li> <li>Budgets are managed by CyVerse.  </li> <li> <p>Instructors can view usage but not set budgets \u2014 email support for adjustments.  </p> </li> <li> <p>Students can\u2019t access prompts </p> </li> <li>Ensure the prompt has been published/shared in the Prompts tab.  </li> <li> <p>Double-check course activity status is set to Active.  </p> </li> <li> <p>Error generating API keys or exporting </p> </li> <li>Retry after refreshing your dashboard session.    </li> </ul>"},{"location":"instructors/troubleshooting/#support-contact","title":"Support Contact","text":"<p>If these steps don\u2019t solve your issue, reach out to the CyVerse team: ai-verde-support@cyverse.org</p>"}]}